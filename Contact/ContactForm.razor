@inject IMailService _mailService
@inject NavigationManager _navManager
@inject ToastService _toastService
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.Extensions.DependencyInjection
@using System.Timers
@using olepunchy.Enums
@using ValidationSummary = Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary
@using System.Text.RegularExpressions
@using System.Globalization

<div class="row my-4">
    <h3 class="violet text-center">Contact Jeremy</h3>
</div>

<div class="row my-2 justify-content-center">
    <div class="col-6">
        <EditForm Model="@_contact" OnValidSubmit="@OnValidSubmit">
            <DataAnnotationsValidator/>

            <div class="mb-3">
                <label for="@_contact.Name" class="form-label">Name:</label>
                <InputText Class="form-control" @bind-Value="_contact.Name" Id="Name"/>
                <div class="error-message">
                    <ValidationMessage For="@(() => _contact.Name)" />
                </div>
            </div>

            <label for="@_contact.EmailAddress" class="mt-2 form-label">Email Address:</label>
            <InputText Class="form-control" @bind-Value="_contact.EmailAddress" Id="EmailAddress"/>
            <div class="error-message">
                <ValidationMessage For="@(() => _contact.EmailAddress)" />
            </div>

            <label for="@_contact.Subject" class="mt-2 form-label">Subject:</label>
            <InputText Class="form-control" @bind-Value="_contact.Subject" Id="Subject"/>
            <div class="error-message">
                <ValidationMessage For="@(() => _contact.Subject)" />
            </div>

            <label for="@_contact.Message" class="mt-2 form-label">Message:</label>
            <InputTextArea Rows="6" Class="form-control" @bind-Value="_contact.Message" Id="Message"/>
            <div class="error-message">
                <ValidationMessage For="@(() => _contact.Message)" />
            </div>

            <!-- TODO: Button should only be active for a valid form -->
            <button class="btn button-submit mt-3" type="submit">Send Message</button>
        </EditForm>

        <ContactSocialIcons />
    </div>        
</div>

@code {
    private readonly ContactModel _contact = new();
    
    private async Task OnValidSubmit() {
        string body = string.Empty;
        body += $"From: {_contact.Name}";
        body += $"\nMail Address: {_contact.EmailAddress}";
        body += $"\nMessage: {_contact.Message}";
        
        await _mailService.SendEmailAsync(_contact.EmailAddress, _contact.Subject, body);
        
        _navManager.NavigateTo("/thanks");
    }
}
