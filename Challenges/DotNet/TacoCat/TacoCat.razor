@using olepunchy.Challenges.Components
@page "/challenges/tacocat"

<ChallengeContainer>
    <ChallengeHeader Title="TacoCat" />
    
    <div class="col text-center mt-4">
        <img src="img/taco-duotone.svg" alt=""> <img class="arrow" src="img/chevron-double-right-duotone.svg" alt="" /> <img src="img/cat-duotone.svg" alt="">
    </div>
    
    <div class="row text-center mt-4">
        <p>Check to see if a given string is a <a href="https://en.wikipedia.org/wiki/Palindrome" target="_blank">Palindrome</a></p>
    </div>
    
    <CodeBlock>
        @Code 
    </CodeBlock>
    
      <div class="col-4 my-4 mx-4 p-4 punchy-violet-border-bg">
         <EditForm Model="@Model" OnValidSubmit="@OnValidSubmit">
            <DataAnnotationsValidator/>
   
            <div class="mb-3">
                <label for="@Model.Input" class="form-label">String to check:</label>
                <br/>
               <InputText @bind-Value="Model.Input" Id="Year" Style="width: 20rem;"/>
               <div class="error-message">
                  <ValidationMessage For="@(() => Model.Input)"/>
               </div>
   
               @Result
   
               <button class="btn button-card mt-4" type="submit">Palindrome?</button>
            </div>
         </EditForm>
      </div>
       
   
    <ChallengeFooter />
</ChallengeContainer>


@code {
    [Parameter] public string Code { get; set; }
    public PalindromeModel Model = new();
    private MarkupString Result { get; set; }

    protected override void OnInitialized() {
        Code = @" 
using System.Text.RegularExpressions;

public static class TacoCat {

    public static bool IsPalindrome(string input) {

        const string regex = '[^a-zA-Z0-9]+';
        string reversed = string.Empty;

        for (int index = input.Length - 1; index >= 0; index--) {
            reversed += input[index];
        }

        reversed = Regex.Replace(reversed.ToLower(), regex, '');
        input = Regex.Replace(input.ToLower(), regex, '');

        return reversed.Equals(input);
    }
}";
    }

    private void OnValidSubmit() {
    }

}